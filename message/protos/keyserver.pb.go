// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.22.0-devel
// 	protoc        v3.12.0
// source: keyserver.proto

package protos

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GetCertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *GetCertRequest) Reset() {
	*x = GetCertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keyserver_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCertRequest) ProtoMessage() {}

func (x *GetCertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keyserver_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCertRequest.ProtoReflect.Descriptor instead.
func (*GetCertRequest) Descriptor() ([]byte, []int) {
	return file_keyserver_proto_rawDescGZIP(), []int{0}
}

func (x *GetCertRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type GetCertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorMessage ErrorMessage `protobuf:"varint,1,opt,name=errorMessage,proto3,enum=protos.ErrorMessage" json:"errorMessage,omitempty"`
	Content      []byte       `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *GetCertResponse) Reset() {
	*x = GetCertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keyserver_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCertResponse) ProtoMessage() {}

func (x *GetCertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keyserver_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCertResponse.ProtoReflect.Descriptor instead.
func (*GetCertResponse) Descriptor() ([]byte, []int) {
	return file_keyserver_proto_rawDescGZIP(), []int{1}
}

func (x *GetCertResponse) GetErrorMessage() ErrorMessage {
	if x != nil {
		return x.ErrorMessage
	}
	return ErrorMessage_OK
}

func (x *GetCertResponse) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type SetCertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Content  []byte `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *SetCertRequest) Reset() {
	*x = SetCertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keyserver_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCertRequest) ProtoMessage() {}

func (x *SetCertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keyserver_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCertRequest.ProtoReflect.Descriptor instead.
func (*SetCertRequest) Descriptor() ([]byte, []int) {
	return file_keyserver_proto_rawDescGZIP(), []int{2}
}

func (x *SetCertRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SetCertRequest) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type SetCertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorMessage ErrorMessage `protobuf:"varint,1,opt,name=errorMessage,proto3,enum=protos.ErrorMessage" json:"errorMessage,omitempty"`
	CertData     []byte       `protobuf:"bytes,2,opt,name=certData,proto3" json:"certData,omitempty"`
}

func (x *SetCertResponse) Reset() {
	*x = SetCertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keyserver_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCertResponse) ProtoMessage() {}

func (x *SetCertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keyserver_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCertResponse.ProtoReflect.Descriptor instead.
func (*SetCertResponse) Descriptor() ([]byte, []int) {
	return file_keyserver_proto_rawDescGZIP(), []int{3}
}

func (x *SetCertResponse) GetErrorMessage() ErrorMessage {
	if x != nil {
		return x.ErrorMessage
	}
	return ErrorMessage_OK
}

func (x *SetCertResponse) GetCertData() []byte {
	if x != nil {
		return x.CertData
	}
	return nil
}

type GetCAPublicKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetCAPublicKeyRequest) Reset() {
	*x = GetCAPublicKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keyserver_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCAPublicKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCAPublicKeyRequest) ProtoMessage() {}

func (x *GetCAPublicKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keyserver_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCAPublicKeyRequest.ProtoReflect.Descriptor instead.
func (*GetCAPublicKeyRequest) Descriptor() ([]byte, []int) {
	return file_keyserver_proto_rawDescGZIP(), []int{4}
}

type GetCAPublicKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetCAPublicKeyResponse) Reset() {
	*x = GetCAPublicKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keyserver_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCAPublicKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCAPublicKeyResponse) ProtoMessage() {}

func (x *GetCAPublicKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keyserver_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCAPublicKeyResponse.ProtoReflect.Descriptor instead.
func (*GetCAPublicKeyResponse) Descriptor() ([]byte, []int) {
	return file_keyserver_proto_rawDescGZIP(), []int{5}
}

func (x *GetCAPublicKeyResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_keyserver_proto protoreflect.FileDescriptor

var file_keyserver_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x6b, 0x65, 0x79, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x1a, 0x10, 0x64, 0x61, 0x74, 0x61, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2c, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x65, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0c,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x22, 0x46, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x67, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x43,
	0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0c, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x65, 0x72, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x63, 0x65, 0x72, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x22, 0x17, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x41, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2c, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x43, 0x41, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0xd3, 0x01, 0x0a, 0x02, 0x43, 0x41, 0x12,
	0x3c, 0x0a, 0x07, 0x67, 0x65, 0x74, 0x43, 0x65, 0x72, 0x74, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3c, 0x0a,
	0x07, 0x73, 0x65, 0x74, 0x43, 0x65, 0x72, 0x74, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x65, 0x72,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0e, 0x67,
	0x65, 0x74, 0x43, 0x41, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x1d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x41, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x41, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x2c,
	0x0a, 0x0e, 0x65, 0x73, 0x66, 0x73, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x42, 0x0e, 0x4b, 0x65, 0x79, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x08, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_keyserver_proto_rawDescOnce sync.Once
	file_keyserver_proto_rawDescData = file_keyserver_proto_rawDesc
)

func file_keyserver_proto_rawDescGZIP() []byte {
	file_keyserver_proto_rawDescOnce.Do(func() {
		file_keyserver_proto_rawDescData = protoimpl.X.CompressGZIP(file_keyserver_proto_rawDescData)
	})
	return file_keyserver_proto_rawDescData
}

var file_keyserver_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_keyserver_proto_goTypes = []interface{}{
	(*GetCertRequest)(nil),         // 0: protos.GetCertRequest
	(*GetCertResponse)(nil),        // 1: protos.GetCertResponse
	(*SetCertRequest)(nil),         // 2: protos.SetCertRequest
	(*SetCertResponse)(nil),        // 3: protos.SetCertResponse
	(*GetCAPublicKeyRequest)(nil),  // 4: protos.GetCAPublicKeyRequest
	(*GetCAPublicKeyResponse)(nil), // 5: protos.GetCAPublicKeyResponse
	(ErrorMessage)(0),              // 6: protos.ErrorMessage
}
var file_keyserver_proto_depIdxs = []int32{
	6, // 0: protos.GetCertResponse.errorMessage:type_name -> protos.ErrorMessage
	6, // 1: protos.SetCertResponse.errorMessage:type_name -> protos.ErrorMessage
	0, // 2: protos.CA.getCert:input_type -> protos.GetCertRequest
	2, // 3: protos.CA.setCert:input_type -> protos.SetCertRequest
	4, // 4: protos.CA.getCAPublicKey:input_type -> protos.GetCAPublicKeyRequest
	1, // 5: protos.CA.getCert:output_type -> protos.GetCertResponse
	3, // 6: protos.CA.setCert:output_type -> protos.SetCertResponse
	5, // 7: protos.CA.getCAPublicKey:output_type -> protos.GetCAPublicKeyResponse
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_keyserver_proto_init() }
func file_keyserver_proto_init() {
	if File_keyserver_proto != nil {
		return
	}
	file_dataserver_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_keyserver_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keyserver_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keyserver_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keyserver_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keyserver_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCAPublicKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keyserver_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCAPublicKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_keyserver_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_keyserver_proto_goTypes,
		DependencyIndexes: file_keyserver_proto_depIdxs,
		MessageInfos:      file_keyserver_proto_msgTypes,
	}.Build()
	File_keyserver_proto = out.File
	file_keyserver_proto_rawDesc = nil
	file_keyserver_proto_goTypes = nil
	file_keyserver_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CAClient is the client API for CA service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CAClient interface {
	GetCert(ctx context.Context, in *GetCertRequest, opts ...grpc.CallOption) (*GetCertResponse, error)
	SetCert(ctx context.Context, in *SetCertRequest, opts ...grpc.CallOption) (*SetCertResponse, error)
	GetCAPublicKey(ctx context.Context, in *GetCAPublicKeyRequest, opts ...grpc.CallOption) (*GetCAPublicKeyResponse, error)
}

type cAClient struct {
	cc grpc.ClientConnInterface
}

func NewCAClient(cc grpc.ClientConnInterface) CAClient {
	return &cAClient{cc}
}

func (c *cAClient) GetCert(ctx context.Context, in *GetCertRequest, opts ...grpc.CallOption) (*GetCertResponse, error) {
	out := new(GetCertResponse)
	err := c.cc.Invoke(ctx, "/protos.CA/getCert", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cAClient) SetCert(ctx context.Context, in *SetCertRequest, opts ...grpc.CallOption) (*SetCertResponse, error) {
	out := new(SetCertResponse)
	err := c.cc.Invoke(ctx, "/protos.CA/setCert", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cAClient) GetCAPublicKey(ctx context.Context, in *GetCAPublicKeyRequest, opts ...grpc.CallOption) (*GetCAPublicKeyResponse, error) {
	out := new(GetCAPublicKeyResponse)
	err := c.cc.Invoke(ctx, "/protos.CA/getCAPublicKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CAServer is the server API for CA service.
type CAServer interface {
	GetCert(context.Context, *GetCertRequest) (*GetCertResponse, error)
	SetCert(context.Context, *SetCertRequest) (*SetCertResponse, error)
	GetCAPublicKey(context.Context, *GetCAPublicKeyRequest) (*GetCAPublicKeyResponse, error)
}

// UnimplementedCAServer can be embedded to have forward compatible implementations.
type UnimplementedCAServer struct {
}

func (*UnimplementedCAServer) GetCert(context.Context, *GetCertRequest) (*GetCertResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCert not implemented")
}
func (*UnimplementedCAServer) SetCert(context.Context, *SetCertRequest) (*SetCertResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetCert not implemented")
}
func (*UnimplementedCAServer) GetCAPublicKey(context.Context, *GetCAPublicKeyRequest) (*GetCAPublicKeyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCAPublicKey not implemented")
}

func RegisterCAServer(s *grpc.Server, srv CAServer) {
	s.RegisterService(&_CA_serviceDesc, srv)
}

func _CA_GetCert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCertRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CAServer).GetCert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.CA/GetCert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CAServer).GetCert(ctx, req.(*GetCertRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CA_SetCert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetCertRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CAServer).SetCert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.CA/SetCert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CAServer).SetCert(ctx, req.(*SetCertRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CA_GetCAPublicKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCAPublicKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CAServer).GetCAPublicKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.CA/GetCAPublicKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CAServer).GetCAPublicKey(ctx, req.(*GetCAPublicKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CA_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.CA",
	HandlerType: (*CAServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getCert",
			Handler:    _CA_GetCert_Handler,
		},
		{
			MethodName: "setCert",
			Handler:    _CA_SetCert_Handler,
		},
		{
			MethodName: "getCAPublicKey",
			Handler:    _CA_GetCAPublicKey_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "keyserver.proto",
}
